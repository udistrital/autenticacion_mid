swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /rol/add:
    post:
      tags:
      - rol
      description: Recibe el usuario y el rol
      operationId: RolController.AddRol
      parameters:
      - in: body
        name: body
        description: Usuario y roles a adicionar
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRol'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseDTO'
        "400":
          description: El rol ya est치 asignado al usuario
        "404":
          description: not found resource
  /rol/remove:
    post:
      tags:
      - rol
      description: Recibe el usuario y el rol
      operationId: RolController.RemoveRol
      parameters:
      - in: body
        name: body
        description: Usuario y rol a remover
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRol'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResponseDTO'
        "404":
          description: not found resource
  /token/emailToken:
    post:
      tags:
      - token
      description: Recibe el correo electr칩nico del usuario desde la autenticaci칩n
      operationId: TokenController.GetEmail
      parameters:
      - in: body
        name: body
        description: The key for staticblock
        required: true
        schema:
          $ref: '#/definitions/models.Token'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserInfo'
        "404":
          description: not found resource
  /token/userRol:
    post:
      tags:
      - token
      description: Recibe el usuario y devuelve informaci칩n detallada del usuario
      operationId: TokenController.GetRol
      parameters:
      - in: body
        name: body
        description: Usuario registrado en wso2
        required: true
        schema:
          $ref: '#/definitions/models.UserName'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Payload'
        "404":
          description: not found resource
definitions:
  119.0xc00045f380.false:
    title: "false"
    type: object
  models.Payload:
    title: Payload
    type: object
    properties:
      Codigo:
        type: string
      Estado:
        type: string
      FamilyName:
        type: string
      documento:
        type: string
      documento_compuesto:
        type: string
      email:
        type: string
      role:
        type: array
        items:
          type: string
  models.ResponseDTO:
    title: ResponseDTO
    type: object
    properties:
      data:
        $ref: '#/definitions/119.0xc00045f380.false'
      message:
        type: string
      status:
        type: integer
        format: int64
      success:
        type: boolean
  models.Token:
    title: Token
    type: object
    properties:
      email:
        type: string
  models.UpdateRol:
    title: UpdateRol
    type: object
    properties:
      rol:
        type: string
      user:
        type: string
  models.UserInfo:
    title: UserInfo
    type: object
    properties:
      Codigo:
        type: string
      Estado:
        type: string
      email:
        type: string
      rol:
        type: array
        items:
          type: string
  models.UserName:
    title: UserName
    type: object
    properties:
      user:
        type: string
tags:
- name: token
  description: |
    TokenController operations for Token
- name: rol
  description: |
    RolController operations for Rol
